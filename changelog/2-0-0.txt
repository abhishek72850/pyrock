2.0.0
-----

New Features
--------
- Copy Import statement
- Generate and copy `django` or `pytest` supported test path
- Run `django` or `pytest` tests


Upcoming Features
-----------------
- Autocomplete
- Project level plugin settings


Updated Settings
----------------
{
    "paths_to_scan": [], // Not used as of now
    "python_venv_path": "",
    "python_interpreter_path": "", // Not used as of now
    "log_level": "info",
    "import_scan_depth": 4,
    "test_config": {
        "enabled": false, // Enable or disable run test feature, default false
        "test_framework": "", // django or pytest
        "working_directory": "", // Working directory of your project
        "test_runner_command": [], // Command to execute when clicking `Run as test`
    }
}

- `test_config.enabled`
    - **Description**: Enable or disable run test feature
    - **Type**: `str`
    - **Allowed Values**: `true` or `false`
    - **Default**: `false`
    > ⚠️ If its `false` then it will ignore all other settings in `test_config`

- `test_config.test_framework`
    - **Description**: Defines what library is used for running the test
    - **Type**: `str`
    - **Allowed Values**: `django` or `pytest`
    - **Default**: NA
    > ⚠️ This assumes that `django` or `pytest` is pre-installed in your python env

- `test_config.working_directory`
    - **Description**: Working directory of your project, this will be used to define what is the root of project
    - **Type**: `str`
    - **Allowed Values**: Valid Path
    - **Default**: NA
    - **Example**:
        ```
        "working_directory": "/Users/abhishek/django-app/"
        ```

- `test_config.test_runner_command`
    - **Description**: Command to execute when clicking `Run as test`
    - **Type**: `List[str]`
    - **Allowed Values**: NA
    - **Default**: NA
    - **Example**
        ```json
        // For Django
        "test_runner_command": ["python", "manage.py", "test", "--keepdb"]

        // For Pytest
        "test_runner_command": ["pytest"] 
        ```

Usage
-----
- To Run Tests:
    - Write your tests and save it as `test_*.py`, the file name has to be prefixed with `test_`
    - Then as you save it will show `Run as test` annotation on individual test class and methods, if you click on any of them it will run that particular test
    > If in between you want to run another test you can simply click on the `Run as test` but this will terminate any running test and starts the new one.
